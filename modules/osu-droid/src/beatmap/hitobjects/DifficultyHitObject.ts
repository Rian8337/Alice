import { HitObject } from './HitObject';

/**
 * Represents an osu!standard hit object with difficulty calculation values.
 */
export class DifficultyHitObject {
    /**
     * The underlying hitobject.
     */
    readonly object: HitObject;

    /**
     * The aim strain generated by the hitobject.
     */
    aimStrain: number = 0;

    /**
     * The speed strain generated by the hitobject.
     */
    speedStrain: number = 0;

    /**
     * The normalized distance between the start and end position of the previous hitobject.
     */
    travelDistance: number = 0;

    /**
     * The normalized distance from the end position of the previous hitobject to the start position of this hitobject.
     */
    jumpDistance: number = 0;

    /**
     * Angle the player has to take to hit this hitobject.
     * 
     * Calculated as the angle between the circles (current-2, current-1, current).
     */
    angle: number|null = null;

    /**
     *  Whether or not the hitobject is considered as singletap.
     */
    isSingle: boolean = false;

    /**
     * The time difference between the hitobject and the previous hitobject (if present).
     */
    deltaTime: number = 0;

    /**
     * The strain time of the hitobject.
     */
    strainTime: number = 0;

    /**
     * The radius of the hitobject.
     */
    radius: number = 0;

    /**
     * @param object The underlying hitobject.
     */
    constructor(object: HitObject) {
        this.object = object;
    }

    toString(): string {
        return `Strains: [${this.speedStrain.toFixed(2)}, ${this.aimStrain.toFixed(2)}], is_single: ${this.isSingle}`;
    }
}